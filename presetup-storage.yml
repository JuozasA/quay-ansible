- name: Setup Container Runtime Storage
  hosts:
  - redis
  - postgres
  - quay
  gather_facts: no
  tags:
  - storage
  vars:
    root_vg: rootvg
    var_lv: varlv
    var_lv_size: 24G

    data_lv: vardatalv
    data_dir: /var/data
    data_lv_size: 12G
  tasks:
  - name: Check Storage Mounts
    tags:
    - mounts
    - checks
    block:
    - setup:
        gather_subset: hardware
    - name: Get list of mounts
      set_fact:
        node_mounts: "{{ ansible_mounts | json_query('[*].mount') }}"
    - name: "Check for required mountpoints"
      assert:
        that: item in node_mounts
      with_items:
      - /var
  - name: Check Storage Volumes
    tags:
    - volumes
    - checks
    block:
    - name: Get list of logical volumes
      find:
        paths: "/dev/{{ root_vg }}"
        file_type: any
      register: node_vols_full
    - name: Simplify list of logical volumes
      set_fact:
        node_vols: "{{ node_vols_full.files | json_query('[*].path') }}"
    - name: "Fail if missing required logical volumes"
      assert:
        that: ('/dev/' + root_vg + '/' + item) in node_vols
      with_items:
      - "{{ var_lv }}"
  - name: Prepare Storage Volumes
    tags:
    - volumes
    block:
    - name: Set up Logical Volume for /var
      lvol:
        vg: "{{ root_vg }}"
        lv: "{{ var_lv }}"
        size: "{{ var_lv_size }}"
        resizefs: yes
    - name: "Set up Logical Volume for {{ data_dir }}"
      lvol:
        vg: "{{ root_vg }}"
        lv: "{{ data_lv }}"
        size: "{{ data_lv_size }}"
        resizefs: yes
  - name: "Prepare new volume filesystems"
    tags:
    - filesystem
    filesystem:
      fstype: xfs
      dev: "/dev/{{ root_vg }}/{{ data_lv }}"
  - name: "Create new mountpoints"
    tags:
    - mounts
    - dirs
    file:
      path: "{{ data_dir }}"
      state: directory
  - name: "Mount new volumes to new mount points"
    tags:
    - mounts
    mount:
      path: "{{ data_dir }}"
      src: "/dev/{{ root_vg }}/{{ data_lv }}"
      fstype: xfs
      state: mounted
  - tags:
    - dirs
    - selinux
    block:
    - name: "Set selinux context for container data"
      sefcontext:
        target: "{{ data_dir }}(/.*)?"
        setype: svirt_sandbox_file_t
        state: present
      register: sefcontext_status
    - name: "Apply selinux context for container data"
      when: sefcontext_status.changed
      shell: "restorecon -irv {{ data_dir }}"
